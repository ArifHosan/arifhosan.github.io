{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./node_modules/codemirror/addon/mode sync","webpack:///./src/app/app.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/api/language.service.ts","webpack:///./src/app/core/api/runner.service.ts","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,+E;;;;;;;;;;;ACRA,oD;;;;;;;;;;;ACAA,+QAA+Q,ieAAie,SAAS,uHAAuH,SAAS,2iBAA2iB,8BAA8B,gHAAgH,4BAA4B,mOAAmO,qQAAqQ,gH;;;;;;;;;;;;;;;;;;;ACA7gE;AACc;AACD;AAEtD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAC;CACrC,CAAC;AAMF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;ACZ7B,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,uIAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AACqB;AACM;AACnB;AAER;AACT;AACO;AACT;AACS;AAmBtD,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IAjBrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,kEAAa;SACd;QACD,OAAO,EAAE;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,2DAAW;YACX,sEAAgB;YAChB,4FAAuB,EAAE,+EAAkB;YAC3C,iEAAe,EAAE,iEAAe,EAAE,gEAAc;SACjD;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;AC9BqB;AACM;AACc;AAE/D,MAAM,OAAO,GAAG,qEAAW,CAAC,OAAO,CAAC;AAKpC,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,YAAmB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IAEvC,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,OAAO,GAAG,WAAW,CAAC,CAAC;IAC1D,CAAC;CACF;AAPY,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAGwB,+DAAU;GAFvB,eAAe,CAO3B;AAP2B;;;;;;;;;;;;;;;;;;;;ACTe;AACO;AACa;AAC/D,MAAM,OAAO,GAAG,qEAAW,CAAC,QAAQ,CAAC;AAKrC,IAAa,aAAa,GAA1B,MAAa,aAAa;IAGxB,YAAmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnC,WAAM,GAAG,EAAC,gBAAgB,EAAE,OAAO,EAAC,CAAC;IAEE,CAAC;IAExC,UAAU,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,EAAE,IAAI,EAAG,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;IAC/E,CAAC;IACD,aAAa,CAAC,KAAK;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,OAAO,GAAG,cAAc,GAAG,KAAK,EAAG,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;IACzF,CAAC;CACF;AAXY,aAAa;IAHzB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAIyB,+DAAU;GAHxB,aAAa,CAWzB;AAXyB;;;;;;;;;;;;ACR1B,+DAA+D,uI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA8C;AAE9D;AACJ;AACE;AACA;AACL;AACuB;AACJ;AAW3D,IAAa,aAAa,GAA1B,MAAa,aAAa;IAwBxB,YAAmB,eAAgC,EAAS,aAA4B;QAArE,oBAAe,GAAf,eAAe,CAAiB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAtBvE,YAAO,GAAG,kCAAkC;QACtD,YAAO,GAAW,EAAE,CAAC;QACrB,YAAO,GAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,GAAG,CAAC;QACrI,SAAI,GAAW,IAAI,CAAC;QAErB,eAAU,GAAW,EAAE,CAAC;QACxB,cAAS,GAAW,EAAE,CAAC;QAYvB,cAAS,GAAG,KAAK,CAAC;QAKvB,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,gBAAgB,GAAG;YACtB,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE;gBACN,KAAK,EAAE,EAAE;gBACT,IAAI,EAAE,EAAE;aACT;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,EAAE;gBACR,MAAM,EAAE,IAAI;aACb;SACF;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpD,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;IACf,CAAC;IAED,kBAAkB,CAAC,KAAK;QACtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;QAC5C,MAAM,YAAY,GAAG,UAAU,CAAC,kBAAkB,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;QACjE,iEAAiE;QACjE,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;YAC9B,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9D,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACxD;IACH,CAAC;IAED,KAAK;QACH,IAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;YAC3B,OAAO;SACR;QACD,MAAM,IAAI,GAAG;YACX,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,aAAa;YAC/C,WAAW,EAAE,IAAI,CAAC,OAAO;YACzB,KAAK,EAAE,IAAI,CAAC,SAAS;SACtB,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,KAAK,CAAC;QACrC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC;QACpD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAErD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACzC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAErC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACpD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YACzC,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,KAAK;QACrB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,GAAG,cAAc,CAAC;QAEnD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,MAAc;QAC5B,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE;YACzB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACvC,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,OAAO;SACR;QACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,QAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;YACxB,KAAK,CAAC;gBACJ,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC;gBACpD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,GAAG,SAAS,CAAC;gBAE9C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBAC1C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;gBAEpD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;gBAChC,MAAM;YACR;gBACI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,GAAG,aAAa,CAAC;gBACnD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;gBAE9D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEzC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,EAAC,CAAC,MAAM,CAAC,MAAM,CAAC;SACpF;IACH,CAAC;CAGF;AA7H0B;IAAxB,kEAAY,CAAC,SAAS,CAAC;;0CAAU;AADvB,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,8IAAoC;;KAErC,CAAC;2EAyBoC,0EAAe,EAAwB,sEAAa;GAxB7E,aAAa,CA8HzB;AA9HyB;;;;;;;;;;;;;ACnB1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,sEAAsE;IAC/E,QAAQ,EAAE,yBAAyB;CACpC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/codemirror/addon/mode sync recursive\";","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"<!-- \\n<select (change)=\\\"changeCodeLanguage($event)\\\">\\n  <option value=\\\"clike\\\">C</option>\\n  <option value=\\\"clike\\\">Java</option>\\n  <option>HTML</option>\\n</select> -->\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row mt-3\\\" style=\\\"height: 500px;\\\">\\n    <div class=\\\"col-xs-12 col-md-12\\\">\\n      <ngx-codemirror #codeBox id=\\\"codeBox\\\" [(ngModel)]=\\\"content\\\" [options]=\\\"options\\\"></ngx-codemirror>\\n    </div>\\n  </div>\\n  <div class=\\\"row mt-4 ml-1\\\">\\n    <div class=\\\"col-xs-3\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Select A Language\\\" (selectionChange)=\\\"changeCodeLanguage($event)\\\">\\n            <ng-template ngFor let-l [ngForOf]=\\\"languageList\\\">\\n                <mat-option [value]=l._id>{{l.title}}</mat-option>\\n            </ng-template>\\n          <!-- <mat-option *ngFor=\\\"let l of languageList\\\" [value]=l._id>{{l.title}}</mat-option> -->\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"col-xs-2 offset-1\\\">\\n      <button mat-raised-button class=\\\"btn btn-success w-100 mt-2\\\" (click)=\\\"onRun()\\\" [disabled]=\\\"isRunning || content.length == 0 || !currentLanguage\\\">Run</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row mt-2\\\">\\n      <div class=\\\"col-xs-12 col-md-6 offset-md-6\\\">\\n        <div class=\\\"status-line\\\" [hidden] = \\\"statusProperties.hidden\\\">\\n          <div class=\\\"d-inline-block\\\" [ngClass]=\\\"statusProperties.status.class\\\">{{statusProperties.status.text}}</div>\\n          <div class=\\\"text-secondary d-inline-block ml-2\\\" [hidden]=\\\"statusProperties.time.hidden\\\">{{statusProperties.time.text}}</div>\\n        </div>\\n      </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-md-6\\\">\\n      <mat-form-field class=\\\"w-100\\\"> \\n        <textarea matInput placeholder=\\\"stdin\\\" style=\\\"min-height: 150px; resize: none\\\" [(ngModel)]=\\\"stdinText\\\"></textarea>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"col-xs-12 col-md-6\\\">\\n        <mat-form-field class=\\\"w-100\\\">\\n          <textarea readonly matInput placeholder=\\\"stdout\\\" style=\\\"min-height: 150px; resize: none\\\" [value] = \\\"stdoutText\\\"></textarea>\\n        </mat-form-field>\\n      </div>\\n  </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'compiler';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatSelectModule, MatButtonModule, MatInputModule} from '@angular/material';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CodemirrorModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule, MatFormFieldModule,\n    MatSelectModule, MatButtonModule, MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment} from '../../../environments/environment';\n\nconst API_URL = environment.restApi;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n\n  constructor(public http:HttpClient) { }\n\n  getAllLanguage() {\n    return this.http.get<Language[]>(API_URL + 'languages');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment} from '../../../environments/environment';\nconst API_URL = environment.judgeApi;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RunnerService {\n  params = {\"base64_encoded\": \"false\"};\n\n  constructor(public http: HttpClient) { }\n\n  submitCode(data) {\n    return this.http.post(API_URL + \"submissions\", data,  {params: this.params});\n  }\n  getSubmission(token) {\n    return this.http.get<Result>(API_URL + \"submissions/\" + token,  {params: this.params});\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, ViewChildren, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/markdown/markdown';\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/addon/mode/loadmode';\nimport { LanguageService } from '../core/api/language.service';\nimport { RunnerService } from '../core/api/runner.service';\n\n\n\ndeclare var CodeMirror: any;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n  @ViewChildren('codeBox') ref: any;\n  private readonly modeUrl = '/assets/codemirror/mode/%N/%N.js'\n  public content: string = \"\";\n  public options: any = { lineNumbers: true, readOnly: false, theme: 'material', mode: 'null', matchBrackets: true, autoCloseBrackets: true, };\n  private mode: string = null;\n  public currentLanguage: Language;\n  public stdoutText: String = \"\";\n  public stdinText: String = \"\";\n  public statusProperties: {\n    hidden: boolean,\n    status: {\n      class: String,\n      text: String\n    },\n    time: {\n      text: String,\n      hidden: boolean\n    }\n  }\n  public isRunning = false;\n\n  public languageList: Language[];\n\n  constructor(public languageService: LanguageService, public runnerService: RunnerService) {\n    CodeMirror.modeURL = this.modeUrl;\n    this.statusProperties = {\n      hidden: true,\n      status: {\n        class: \"\",\n        text: \"\",\n      },\n      time: {\n        text: \"\",\n        hidden: true\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.languageService.getAllLanguage().subscribe(res => {\n      this.languageList = res;\n    });\n  }\n\n  ngAfterViewInit() {\n  }\n\n  changeCodeLanguage(event) {\n    this.currentLanguage = this.languageList.filter(x => x._id == event.value)[0];\n    const name = this.currentLanguage.file_name;\n    const detectedMode = CodeMirror.findModeByFileName(name + \".js\");\n    // const detectedMode = CodeMirror.findModeByMIME(\"text/x-csrc\");\n    if (detectedMode) {\n      this.mode = detectedMode.mode;\n      CodeMirror.autoLoadMode(this.ref.first.codeMirror, this.mode);\n      this.ref.first.codeMirror.setOption('mode', this.mode);\n    }\n  }\n\n  onRun() {\n    if(this.content.length <= 0) {\n      return;\n    }\n    const data = {\n      language_id: this.currentLanguage.language_name,\n      source_code: this.content,\n      stdin: this.stdinText\n    };\n    this.isRunning = true;\n\n    this.statusProperties.hidden = false;\n    this.statusProperties.status.class = \"text-warning\";\n    this.statusProperties.status.text = \"Compiling.....\";\n\n    this.statusProperties.time.hidden = true;\n    this.statusProperties.time.text = \"\";\n\n    this.runnerService.submitCode(data).subscribe(token => {\n      console.log(token);\n      setTimeout(() => {\n        this.getSubmissionInfo(token[\"token\"]);\n      }, 1000);\n    });\n  }\n\n  getSubmissionInfo(token) {\n    this.statusProperties.status.class = \"text-info\";\n    this.statusProperties.status.text = \"Running.....\";\n\n    this.runnerService.getSubmission(token).subscribe(res => {\n      console.log(res);\n      this.processResponse(res);\n    });\n  }\n\n  processResponse(result: Result) {\n    if (result.status.id <= 2) {\n      setTimeout(() => {\n        this.getSubmissionInfo(result.token);\n      }, 1000);\n      return;\n    }\n    this.isRunning = false;\n\n    switch (result.status.id) {\n      case 3:\n        this.statusProperties.status.class = \"text-success\";\n        this.statusProperties.status.text = \"Success\";\n\n        this.statusProperties.time.hidden = false;\n        this.statusProperties.time.text = result.time + \"s\";\n\n        this.stdoutText = result.stdout;\n        break;\n      default:\n          this.statusProperties.status.class = \"text-danger\";\n          this.statusProperties.status.text = result.status.description;\n\n          this.statusProperties.time.hidden = true;\n\n          this.stdoutText = result.compile_output ? result.compile_output: result.stderr;\n    }\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  restApi: 'https://per86r2mvj.execute-api.ap-southeast-1.amazonaws.com/dev/api/',\n  judgeApi: 'https://api.judge0.com/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}